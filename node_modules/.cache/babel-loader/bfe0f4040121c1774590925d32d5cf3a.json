{"remainingRequest":"/Users/weiweiwei/code/projects/clockin/node_modules/thread-loader/dist/cjs.js!/Users/weiweiwei/code/projects/clockin/node_modules/babel-loader/lib/index.js!/Users/weiweiwei/code/projects/clockin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/weiweiwei/code/projects/clockin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weiweiwei/code/projects/clockin/src/components/VkPicture/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weiweiwei/code/projects/clockin/src/components/VkPicture/index.vue","mtime":1693242782798},{"path":"/Users/weiweiwei/code/projects/clockin/babel.config.js","mtime":1690970233489},{"path":"/Users/weiweiwei/code/projects/clockin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/clockin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/clockin/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/weiweiwei/code/projects/clockin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/clockin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
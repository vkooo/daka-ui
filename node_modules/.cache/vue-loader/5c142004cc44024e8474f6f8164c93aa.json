{"remainingRequest":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weiweiwei/code/projects/init-admin/src/views/menu/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weiweiwei/code/projects/init-admin/src/views/menu/index.vue","mtime":1691721698179},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxpc3RzLCBlZGl0LCB1cGRhdGUsIGNoYW5nZVN0YXR1cywgY3JlYXRlLCBkZWwgfSBmcm9tICJAL2FwaS9hdXRoL21lbnUiOwppbXBvcnQgeyBjb25maXJtIH0gZnJvbSAiQC91dGlscy9tZXNzYWdlLWJveC5qcyI7CmltcG9ydCB7IGdldFRhYmxlSWRzIH0gZnJvbSAiQC91dGlscy9pbmRleC5qcyI7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAidnVleCIKaW1wb3J0IFRyZWVzZWxlY3QgZnJvbSAiQHJpb3BoYWUvdnVlLXRyZWVzZWxlY3QiOwppbXBvcnQgIkByaW9waGFlL3Z1ZS10cmVlc2VsZWN0L2Rpc3QvdnVlLXRyZWVzZWxlY3QuY3NzIjsKaW1wb3J0IEljb25TZWxlY3QgZnJvbSAiQC9jb21wb25lbnRzL0ljb25TZWxlY3QiOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogImluZGV4IiwKICAgIGNvbXB1dGVkOiB7CgkJLi4ubWFwU3RhdGUoJ3VzZXInLCBbInVzZXJJbmZvIl0pLAogICAgfSwKICAgIGNvbXBvbmVudHM6IHsgVHJlZXNlbGVjdCwgSWNvblNlbGVjdCB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBxdWVyeToge30sCiAgICAgICAgICAgIGxpc3Q6IFtdLAogICAgICAgICAgICB0aXRsZTogIiIsCiAgICAgICAgICAgIGZvcm06IHt9LAogICAgICAgICAgICBkcmF3ZXJGb3JtVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIHNob3dTZWFyY2g6IHRydWUsCiAgICAgICAgICAgIHJ1bGVzOiB7CiAgICAgICAgICAgICAgICBuYW1lOiBbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeinkuiJsicsIHRyaWdnZXI6ICdibHVyJyB9LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIHN0YXR1czogWwogICAgICAgICAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fpgInmi6nnirbmgIEnLCB0cmlnZ2VyOiAnY2hhbmdlJyB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5yZXN0KCkKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgcXVlcnlEYXRhKCkgewogICAgICAgICAgICB0aGlzLnF1ZXJ5ID0gewogICAgICAgICAgICAgICAga2V5d29yZDogIiIsCiAgICAgICAgICAgICAgICBzdGF0dXM6ICIiLAogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBnZXRMaXN0KCkgewogICAgICAgICAgICBsZXQgdGhhdCA9IHRoaXMKICAgICAgICAgICAgbGlzdHModGhhdC5xdWVyeSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgICB0aGF0Lmxpc3QgPSByZXMuZGF0YQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIHNlYXJjaCgpIHsKICAgICAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICAgICAgfSwKICAgICAgICBzdGF0dXMoZSwgaWQsIGluZGV4KSB7CiAgICAgICAgICAgIGNoYW5nZVN0YXR1cyhpZCwgZSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKQogICAgICAgICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGFkZDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGlzLmZvcm0gPSB7fQogICAgICAgICAgICB0aGlzLnRpdGxlID0gIuaWsOWinuinkuiJsiI7CiAgICAgICAgICAgIGVkaXQoKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmZvcm0gPSByZXMuZGF0YQogICAgICAgICAgICAgICAgdGhpcy5mb3JtLnN0YXR1cyA9IDEKICAgICAgICAgICAgICAgIHRoaXMuZm9ybS5oaWRkZW4gPSAwCiAgICAgICAgICAgICAgICB0aGlzLmZvcm0uaXNGcmFtZSA9IDAKICAgICAgICAgICAgICAgIHRoaXMuZHJhd2VyRm9ybVZpc2libGUgPSB0cnVlCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBkZWxBbGw6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbGV0IGlkcyA9IGdldFRhYmxlSWRzKHRoaXMuJHJlZnMuZHJhZ1RhYmxlKQogICAgICAgICAgICBsZXQgZm4gPSAoKSA9PiB7CiAgICAgICAgICAgICAgICBkZWwoaWRzKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLm1zZywKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uZmlybSgi5piv5ZCm5rC45LmF5Yig6Zmk6K+l5pWw5o2u77yfIiwgZm4pOwogICAgICAgIH0sCiAgICAgICAgZGVsOiBmdW5jdGlvbiAoaW5kZXgsIGUpIHsKICAgICAgICAgICAgbGV0IGZuID0gKCkgPT4gewogICAgICAgICAgICAgICAgZGVsKGUuaWQpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UubXNnLAogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfQogICAgICAgICAgICBjb25maXJtKCLmmK/lkKbmsLjkuYXliKDpmaTor6XmlbDmja7vvJ8iLCBmbik7CiAgICAgICAgfSwKICAgICAgICBzZWxlY3RlZChuYW1lKSB7CiAgICAgICAgICAgIHRoaXMuZm9ybS5pY29uID0gbmFtZTsKICAgICAgICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKQogICAgICAgIH0sCiAgICAgICAgZWRpdDogZnVuY3Rpb24gKGluZGV4LCBlKSB7CiAgICAgICAgICAgIHRoaXMudGl0bGUgPSAi57yW6L6R6KeS6ImyIjsKICAgICAgICAgICAgZWRpdChlLmlkKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmZvcm0gPSByZXMuZGF0YQogICAgICAgICAgICAgICAgdGhpcy5kcmF3ZXJGb3JtVmlzaWJsZSA9IHRydWUKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIHJlc3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy5xdWVyeURhdGEoKQogICAgICAgICAgICB0aGlzLmdldExpc3QoKTsKICAgICAgICB9LAogICAgICAgIG5vcm1hbGl6ZXIobm9kZSkgewogICAgICAgICAgICBpZiAobm9kZS5jaGlsZHJlbiAmJiAhbm9kZS5jaGlsZHJlbi5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIGRlbGV0ZSBub2RlLmNoaWxkcmVuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBpZDogbm9kZS5pZCwKICAgICAgICAgICAgICAgIGxhYmVsOiBub2RlLm5hbWUsCiAgICAgICAgICAgICAgICBjaGlsZHJlbjogbm9kZS5jaGlsZHJlbgogICAgICAgICAgICB9OwogICAgICAgIH0sCiAgICAgICAgc3VibWl0KCkgewogICAgICAgICAgICB0aGlzLiRyZWZzLnJ1bGVGb3JtLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgICAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IGFwaSA9IHRoaXMuZm9ybS5pZCA/IHVwZGF0ZSh0aGlzLmZvcm0pIDogY3JlYXRlKHRoaXMuZm9ybSkKCiAgICAgICAgICAgICAgICAgICAgYXBpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kcmF3ZXJGb3JtVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogIuaTjeS9nOaIkOWKnyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/views/menu","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-card class=\"show\">\n            <el-form inline :model=\"query\" ref=\"queryForm\" class=\"vk-form-inline\" v-if=\"showSearch\">\n                <el-form-item label=\"菜单\">\n                    <el-input v-model=\"query.keyword\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"状态\">\n                    <el-select v-model=\"query.status\" clearable>\n                        <el-option value=\"1\" label=\"正常\"></el-option>\n                        <el-option value=\"2\" label=\"禁用\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item>\n                    <el-button icon=\"el-icon-search\" @click='search()'>搜索</el-button>\n                    <el-button @click='rest()'>重置</el-button>\n                </el-form-item>\n            </el-form>\n            <el-row :gutter=\"10\" class=\"mb8\">\n                <el-col :span=\"1.5\">\n                    <el-button type=\"primary\" plain icon=\"el-icon-plus\" size=\"mini\" @click=\"add\"\n                        v-auth=\"['menu:create']\">新增</el-button>\n                </el-col>\n                <el-col :span=\"1.5\">\n                    <el-button type=\"danger\" plain icon=\"el-icon-delete\" size=\"mini\" @click=\"delAll\"\n                        v-auth=\"['menu:delete']\">删除</el-button>\n                </el-col>\n                <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n            </el-row>\n\n            <el-table :data=\"list\" row-key=\"id\" ref=\"dragTable\" \n                :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"    \n                v-fixed-scroll\n            >\n                <el-table-column type=\"selection\"></el-table-column>\n                <el-table-column label=\"菜单\" prop=\"name\">\n                </el-table-column>\n                <el-table-column prop=\"icon\" label=\"图标\" align=\"center\" width=\"100\">\n                    <template slot-scope=\"scope\" v-if=\"scope.row.icon\">\n                    <svg-icon :icon-class=\"scope.row.icon\" />\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"perms\" label=\"权限标识\" align=\"center\" />\n                <el-table-column prop=\"component\" label=\"组件\" align=\"center\" />\n                <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                    <template slot-scope=\"scope\">\n                        <el-tag :type=\"scope.row.status == 1?'':'success'\">{{ scope.row.status == 1?'正常':\"禁用\" }}</el-tag>\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"created_at\" label=\"创建时间\">\n                </el-table-column>\n                <el-table-column label=\"操作\" fixed=\"right\">\n                    <template slot-scope=\"scope\">\n                        <el-link type=\"primary\" icon=\"el-icon-edit\" \n                            :underline=\"false\" v-auth=\"'role:edit'\"\n                            @click=\"edit(scope.$index, scope.row)\">编辑</el-link>\n                        <el-link type=\"primary\" icon=\"el-icon-delete\" \n                            :underline=\"false\" v-auth=\"'role:delete'\"\n                            @click=\"del(scope.$index, scope.row)\">删除</el-link>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </el-card>\n\n        <el-drawer :title=\"title\" :visible.sync=\"drawerFormVisible\" :direction=\"'rtl'\" :append-to-body=\"true\"\n            size=\"35%\"\n            custom-class=\"drawer\" ref=\"drawer\">\n            <div class=\"vk-drawer__content\">\n                <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\">\n                    <el-form-item label=\"菜单类型\" prop=\"type\">\n                        <el-radio-group v-model=\"form.type\">\n                            <el-radio-button :label=\"1\">目录</el-radio-button>\n                            <el-radio-button :label=\"2\">菜单</el-radio-button>\n                            <el-radio-button :label=\"3\">按钮</el-radio-button>\n                        </el-radio-group>\n                    </el-form-item>\n                    <el-form-item label=\"上级菜单\" prop=\"pid\">\n                        <treeselect\n                            v-model=\"form.pid\"\n                            :options=\"form.routers\"\n                            :normalizer=\"normalizer\"\n                            :show-count=\"true\"\n                            placeholder=\"选择上级菜单\"\n                        />\n                    </el-form-item>\n                    <el-row>\n                        <el-col :span=\"12\">\n                            <el-form-item label=\"菜单名称\" prop=\"name\">\n                                <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :span=\"12\">\n                            <el-form-item label=\"菜单图标\" prop=\"icon\">\n                                <el-popover\n                                    placement=\"bottom-start\"\n                                    width=\"460\"\n                                    trigger=\"click\"\n                                    @show=\"$refs['iconSelect'].reset()\"\n                                >\n                                    <IconSelect ref=\"iconSelect\" @selected=\"selected\" :active-icon=\"form.icon\" />\n                                    <el-input slot=\"reference\" v-model=\"form.icon\" placeholder=\"点击选择图标\" readonly>\n                                        <svg-icon\n                                            v-if=\"form.icon\"\n                                            slot=\"prefix\"\n                                            :icon-class=\"form.icon\"\n                                            style=\"width: 25px;\"\n                                        />\n                                        <i v-else slot=\"prefix\" class=\"el-icon-search el-input__icon\" />\n                                    </el-input>\n                                </el-popover>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                    <el-row>\n                        <el-col :span=\"12\">\n                            <el-form-item label=\"组件\" prop=\"component\" v-if=\"form.type == 2\">\n                                <el-input v-model=\"form.component\" autocomplete=\"off\"></el-input>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :span=\"12\">\n                            <el-form-item label=\"权限标识\" prop=\"perms\">\n                                <el-input v-model=\"form.perms\" autocomplete=\"off\"></el-input>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                    <el-row v-if=\"form.type != 3\">\n                        <el-col :span=\"12\">\n                            <el-form-item label=\"路由\" prop=\"path\">\n                                <el-input v-model=\"form.path\" autocomplete=\"off\"></el-input>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :span=\"12\">\n                            <el-form-item label=\"是否外链\" prop=\"isFrame\">\n                                <el-radio-group v-model=\"form.isFrame\">\n                                    <el-radio-button :label=\"1\">是</el-radio-button>\n                                    <el-radio-button :label=\"0\">否</el-radio-button>\n                                </el-radio-group>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                    <el-row>\n                        <el-col :span=\"12\">\n                            <el-form-item label=\"状态\" prop=\"status\">\n                                <el-radio-group v-model=\"form.status\">\n                                    <el-radio-button :label=\"1\">正常</el-radio-button>\n                                    <el-radio-button :label=\"2\">禁用</el-radio-button>\n                                </el-radio-group>\n                            </el-form-item>\n                        </el-col>\n                      \n                        <el-col :span=\"12\" v-if=\"form.type != 3\">\n                            <el-form-item label=\"是否显示\" prop=\"hidden\">\n                                <el-radio-group v-model=\"form.hidden\">\n                                    <el-radio-button :label=\"0\">显示</el-radio-button>\n                                    <el-radio-button :label=\"1\">隐藏</el-radio-button>\n                                </el-radio-group>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                    <el-row>\n                        <el-col :span=\"12\" v-if=\"form.type == 2\">\n                            <el-form-item label=\"是否缓存\" prop=\"noCache\">\n                                <el-radio-group v-model=\"form.noCache\">\n                                    <el-radio-button :label=\"1\">是</el-radio-button>\n                                    <el-radio-button :label=\"0\">否</el-radio-button>\n                                </el-radio-group>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                </el-form>\n                <div slot=\"footer\" class=\"vk-drawer__footer\">\n                    <el-button @click=\"drawerFormVisible = false\">取 消</el-button>\n                    <el-button type=\"primary\" v-throttle=\"2000\" @click=\"submit\">确 定</el-button>\n                </div>\n            </div>\n        </el-drawer>\n    </div>\n</template>\n  \n<script>\nimport { lists, edit, update, changeStatus, create, del } from \"@/api/auth/menu\";\nimport { confirm } from \"@/utils/message-box.js\";\nimport { getTableIds } from \"@/utils/index.js\";\nimport { mapState } from \"vuex\"\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nimport IconSelect from \"@/components/IconSelect\";\n\nexport default {\n    name: \"index\",\n    computed: {\n\t\t...mapState('user', [\"userInfo\"]),\n    },\n    components: { Treeselect, IconSelect },\n    data() {\n        return {\n            query: {},\n            list: [],\n            title: \"\",\n            form: {},\n            drawerFormVisible: false,\n            showSearch: true,\n            rules: {\n                name: [\n                    { required: true, message: '请输入角色', trigger: 'blur' },\n                ],\n                status: [\n                    { required: true, message: '请选择状态', trigger: 'change' }\n                ],\n            }\n        }\n    },\n    created() {\n        this.rest()\n    },\n    methods: {\n        queryData() {\n            this.query = {\n                keyword: \"\",\n                status: \"\",\n            }\n        },\n        getList() {\n            let that = this\n            lists(that.query).then(res => {\n                if (res.code === 200) {\n                    that.list = res.data\n                }\n            }).catch(error => {\n                console.log(error)\n            })\n        },\n        search() {\n            this.getList();\n        },\n        status(e, id, index) {\n            changeStatus(id, e).then(res => {\n                console.log(res)\n            }).catch(error => {\n                console.log(error)\n            })\n        },\n        add: function () {\n            this.form = {}\n            this.title = \"新增角色\";\n            edit().then(res => {\n                this.form = res.data\n                this.form.status = 1\n                this.form.hidden = 0\n                this.form.isFrame = 0\n                this.drawerFormVisible = true\n            })\n        },\n        delAll: function () {\n            let ids = getTableIds(this.$refs.dragTable)\n            let fn = () => {\n                del(ids).then((response) => {\n                    this.$message({\n                        type: 'success',\n                        message: response.msg,\n                    });\n                    location.reload();\n                }).catch((error) => {\n                    console.log(error);\n                })\n            }\n            confirm(\"是否永久删除该数据？\", fn);\n        },\n        del: function (index, e) {\n            let fn = () => {\n                del(e.id).then((response) => {\n                    this.$message({\n                        type: 'success',\n                        message: response.msg,\n                    });\n                    location.reload();\n                }).catch((error) => {\n                    console.log(error);\n                })\n            }\n            confirm(\"是否永久删除该数据？\", fn);\n        },\n        selected(name) {\n            this.form.icon = name;\n            this.$forceUpdate()\n        },\n        edit: function (index, e) {\n            this.title = \"编辑角色\";\n            edit(e.id).then(res => {\n                this.form = res.data\n                this.drawerFormVisible = true\n            })\n        },\n        rest: function () {\n            this.queryData()\n            this.getList();\n        },\n        normalizer(node) {\n            if (node.children && !node.children.length) {\n                delete node.children;\n            }\n            return {\n                id: node.id,\n                label: node.name,\n                children: node.children\n            };\n        },\n        submit() {\n            this.$refs.ruleForm.validate((valid) => {\n                if (valid) {\n                    let api = this.form.id ? update(this.form) : create(this.form)\n\n                    api.then(res => {\n                        this.drawerFormVisible = false\n                        this.$message({\n                            message: \"操作成功\",\n                            type: \"success\"\n                        })\n                        location.reload();\n                    })\n                } else {\n                    return false;\n                }\n            });\n        }\n    }\n}\n</script>\n  \n<style scoped></style>\n  "]}]}
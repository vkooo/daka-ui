{"remainingRequest":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weiweiwei/code/projects/init-admin/src/components/VkPicture/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weiweiwei/code/projects/init-admin/src/components/VkPicture/index.vue","mtime":1691833895138},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/VkPicture","sourcesContent":["<template>\n    <div>\n        <el-dialog title=\"请选择图片\" \n            width=\"70%\"\n            :visible.sync=\"dialogVisible\" @close=\"dialogClose\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"6\">\n                    <el-input placeholder=\"选择分类\" type=\"text\" clearable v-model=\"cateSeach.keyword\">\n                        <el-button type=\"primary\" slot=\"append\" @click=\"getCategoryList\" icon=\"el-icon-search\"></el-button>\n                    </el-input>\n                    <div class=\"pt10 pb10\">\n                        <el-tree :data=\"categoryList\" \n                            :props=\"defaultProps\" @node-click=\"cateTreeClick\"\n                            :render-content=\"renderTreeContent\"\n                        />\n                    </div>\n                </el-col>\n                <el-col :span=\"18\">\n                    <div>\n                        <el-button class=\"mb10 mr10\" size=\"mini\" type=\"primary\" @click=\"selectImage\">使用选中图片</el-button>\n                        <el-button class=\"mb10 mr10\" size=\"mini\" type=\"primary\" v-auth=\"['attachment:upload']\">\n                            <el-upload\n                                ref=\"upload\"\n                                class=\"upload-demo\"\n                                :action=\"domain + '/admin/attachment/upload'\"\n                                multiple\n                                :show-file-list=\"false\"\n                                :headers=\"headers\"\n                                :auto-upload=\"false\"\n                                :on-change=\"fileChange\"\n                                :on-success=\"successUpload\"\n                            >\n                                点击上传\n                            </el-upload>\n                        </el-button>\n                        <el-button class=\"mb10 mr10\" size=\"mini\" type=\"success\" @click=\"categoryEdit(0)\">添加分类</el-button>\n                        <el-button class=\"mb10 mr10\" size=\"mini\" type=\"danger\" :disabled=\"disabled\">删除图片</el-button>\n                    </div>\n                    <div class=\"vk-flex\">\n                        <div class=\"mr10\">\n                            <el-input style=\"width: 230px;\" placeholder=\"请输入图片名称搜索\" clearable v-model=\"attachment.keyword\">\n                                <el-button type=\"primary\" slot=\"append\" icon=\"el-icon-search\" @click=\"getList\"></el-button>\n                            </el-input>\n                        </div>\n                        <treeselect\n                            style=\"width: 204px;\"\n                            v-model=\"moveCategoryId\"\n                            :options=\"categoryAllList\"\n                            :normalizer=\"normalizer\"\n                            :show-count=\"true\"\n                            placeholder=\"图片移动至\"\n                            @select=\"moveCategorySelect\"\n                            :disabled=\"disabled\"\n                        />\n                    </div>\n                    <div class=\"conters mt10\">\n                        <div class=\"gridPic\" v-for=\"(item, index) in list\">\n                            <div @click=\"imageClick(item)\" :class=\"selectIds.indexOf(item.id) > -1?'active':''\">\n                                <el-image \n                                    class=\"square-image\"\n                                    :src=\"item.full_url\" />\n                            </div>\n                            <div style=\"display: flex; align-items: center; justify-content: space-between;\">\n                                <p v-if=\"!item.edit\" class=\"name\" style=\"width: 80%;\">{{item.name}}</p>\n                                <el-input v-else v-model=\"item.name\"></el-input>\n                                <i @click=\"editName(index)\" :class=\"item.edit?'el-icon-check':'el-icon-edit'\"></i>\n                            </div>\n                            <p class=\"number\"\n                                v-if=\"selectIds.indexOf(item.id) > -1\"\n                            >\n                                <el-badge :value=\"1\" class=\"item\">\n                                    <i class=\"demo-badge\" />\n                                </el-badge>\n                            </p>\n                        </div>\n                    </div>\n                    <Pagination :total=\"total\" @pageChange=\"pageChange\" />\n\n                </el-col>\n            </el-row>\n        </el-dialog>\n        <el-dialog title=\"添加分类\" :visible.sync=\"dialogCategoryVisible\">\n            <el-form :model=\"categoryForm\" \n                ref=\"categoryFormRef\"\n                :rules=\"categoryRules\" label-width=\"80px\">\n                <el-form-item label=\"上级分类\" prop=\"pid\">\n                    <treeselect\n                        style=\"width: 204px;\"\n                        v-model=\"categoryForm.pid\"\n                        :options=\"categoryAllList\"\n                        :normalizer=\"normalizer\"\n                        :show-count=\"true\"\n                        placeholder=\"请选择上级分类\"\n                    />\n                </el-form-item>\n                <el-form-item label=\"分类名称\" prop=\"name\">\n                    <el-input v-model=\"categoryForm.name\" placeholder=\"请输入分类名称\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"排序\" prop=\"sort\">\n                    <el-input-number v-model=\"categoryForm.sort\" placeholder=\"请输入排序\" />\n                </el-form-item>\n\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"categorySubmit\" v-throttle=\"2000\">立即创建</el-button>\n                    <el-button @click=\"dialogCategoryVisible = false\">取消</el-button>\n                </el-form-item>\n            </el-form>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nimport * as attachmentApi from \"@/api/attachment\";\nimport * as categoryApi from \"@/api/attachment/category\";\nimport { confirm } from \"@/utils/message-box.js\";\nimport { getToken } from '@/utils/auth'\nimport SparkMD5 from 'spark-md5'\n\nlet DOMAIN = process.env.VUE_APP_BASE_DOMAIN\nexport default {\n    props:{\n        maxCount: {\n            type: [Number, String],\n            default: 0\n        }\n    },\n    components: { Treeselect },\n    data() {\n        return {\n            dialogVisible: false,\n            list: [],\n            total: 0,\n            defaultProps: {\n                children: 'children',\n                label: 'name'\n            },\n            selectIds:[],\n            selectUrls:[],\n            categoryList: [],\n            categoryAllList: [],\n            moveCategoryId: null,\n            disabled: true,\n            cateSeach: {},\n            attachment: {},\n            dialogCategoryVisible: false,\n            categoryForm: {},\n            categoryRules: {\n                name: [\n                    { required: true, message: '请输入分类名称', trigger: 'blur' },\n                ],\n                sort: [\n                    { required: true, message: '请输入排序', trigger: 'blur' },\n                ],\n            },\n            domain: DOMAIN,\n            headers: {\n                Authorization: \"Bearer \" + getToken()\n            }\n        };\n    },\n    watch:{\n        selectIds:{\n            handler(newVal, oldVal){\n                this.disabled = !(newVal.length > 0)\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    created: function(){\n        this.getCategoryList()\n        this.getCategoryAllList()\n        this.getList()\n    },\n    methods: {\n        getList(){\n            attachmentApi.lists(this.attachment).then(res=>{\n                const { list, total } = res.data\n                this.list = list\n                this.total = total\n            }) \n        },\n        getCategoryList(){\n            categoryApi.lists(this.cateSeach).then(res=>{\n                this.categoryList = res.data\n            })\n        },\n        getCategoryAllList(){\n            categoryApi.allLists().then(res=>{\n                this.categoryAllList = res.data\n            })\n        },\n        editName(index){\n            let e = !this.list[index].edit;\n            this.list[index].edit =e\n\n            if(!e){\n                attachmentApi.editName(this.list[index]).then(res=>{\n                    if(res.code == 200){\n                        this.$message({\n                            message: \"操作成功\",\n                            type: \"success\"\n                        })\n                    }\n                })\n            }\n        },\n        imageClick(item){\n            let ids = new Set(this.selectIds)\n                , urls = new Set(this.selectUrls);\n            \n            let fun = function (params, p) {\n                params.has(p)? params.delete(p): params.add(p)\n                return [...params];\n            }\n            this.selectIds = fun(ids, item.id)\n\t\t\tthis.selectUrls = fun(urls, item.full_url)\n        },\n        normalizer(node) {\n            if (node.children && !node.children.length) {\n                delete node.children;\n            }\n            return {\n                id: node.id,\n                label: node.name,\n                children: node.children\n            };\n        },\n        renderTreeContent(h, { node, data, store }) {\n            let html = \"\"\n            if(data.id > 0){\n                html = <span>\n                    <el-button size=\"mini\" type=\"text\" on-click={ () => this.categoryEdit(data.id) }>编辑</el-button>\n                    <el-button size=\"mini\" type=\"text\" on-click={ () => this.categoryDel (data.id) }>删除</el-button>\n                </span>\n            }\n            return (\n            <span class=\"custom-tree-node\">\n                <span>{data.name}</span>\n                {html}\n            </span>);\n        },\n        cateTreeClick(data){\n            this.attachment.category_id = data.id\n            this.getList()     \n        },\n        categoryEdit(id){\n            categoryApi.edit(id).then(res=>{\n                this.categoryForm = id?res.data: {}\n                this.dialogCategoryVisible = true \n            })\n        },\n        categoryDel(id){\n            confirm(\"是否永久删除该数据？\", ()=>{\n                categoryApi.del(id).then(res=>{\n                    this.$message({\n                        type: 'success',\n                        message: res.msg,\n                    });\n                    this.getCategoryList()\n                })\n            });\n        },\n        categorySubmit(){\n            let that = this\n            let form = that.categoryForm\n            this.$refs.categoryFormRef.validate((valid) => {\n                if (valid) {\n                    let api = form.id? categoryApi.update(form): categoryApi.create(form)\n                    api.then(res=>{\n                        that.categoryForm = res.data\n                        this.getCategoryList()\n                        this.getCategoryAllList()\n                        this.dialogCategoryVisible = false\n                    })\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        },\n        fileChange(file){\n            const _this = this  \n            let fileReader = new FileReader()\n            let Spark = new SparkMD5.ArrayBuffer()\n            fileReader.readAsArrayBuffer(file.raw)\n            fileReader.onload = function(e){\n                Spark.append(e.target.result)\n                let md5 = Spark.end()\n\n                _this.$nextTick(_this.fileMd5(file, md5))\n            }\n            return false\n        },\n        fileMd5(file, md5){\n            if(file.status != 'ready') {\n                return false\n            }\n            attachmentApi.fileMd5({\n                md5: md5\n            }).then(res=>{\n                if(res.code === 200){\n                    if(res.data != null){\n                        const data = res.data\n                        this.list.push(data)\n                        this.$refs.upload.handleRemove(file);\n                        return\n                    }else{\n                        this.$refs.upload.submit();\n                    }\n                }\n            })\n        },\n        successUpload(response, file, fileList){\n            const data = response.data\n            this.list.push(data)\n        },\n        pageChange(page){\n            this.queryData()\n            this.page = page\n            this.getList();\n        },\n        moveCategorySelect(node){\n            if(this.selectIds.length <= 0){\n                this.$throw(\"请选择移动图片\")\n            }\n            attachmentApi.move({\n                categoryId: node.id,\n                ids: this.selectIds\n            }).then(res=>{\n                this.$message({\n                    message: \"操作成功\",\n                    type: \"success\"\n                })\n            })\n            console.log()\n        },\n        selectImage(){\n            let ids = this.selectIds;\n            let urls = this.selectUrls;\n            let maxCount = Number(this.maxCount)\n            if(urls.length <= 0)\n                this.$throw(\"请选择图片\")\n            if(maxCount > 0 && urls.length > maxCount){\n                this.$throw(\"最多选择\" + maxCount + \"张图片\")\n            }\n            this.$emit(\"selectImage\", {\n                ids: ids,\n                urls: urls,\n            })\n            this.dialogClose()\n        },\n        dialogClose(){\n            this.cateSeach = {}\n            this.attachment = {}\n            this.selectIds = []\n            this.selectUrls = []\n            this.dialogVisible = false\n            this.getList()\n        }\n    }\n};\n</script>\n<style scoped lang=\"scss\">\n.conters{\n    display: flex;\n    flex-wrap: wrap;\n    .gridPic{\n        margin-right: 20px;\n        margin-bottom: 10px;\n        width: 110px;\n        height: 150px;\n        cursor: pointer;\n        position: relative;\n        .active{\n            border: 2px solid #5fb878;\n        }\n\n        .name{\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            color: #515a6e;\n            font-size: 12px;\n        }\n        .number{\n            position: absolute;\n            top: 0;\n            right: 0;\n            margin: 0;\n        }\n        .demo-badge{\n            width: 42px;\n            height: 42px;\n            background: transparent;\n            border-radius: 6px;\n            display: inline-block;\n        }\n        ::v-deep .el-badge__content{\n            position: absolute;\n            transform: translateX(50%);\n            top: -10px;\n            right: 0;\n            height: 20px;\n            border-radius: 10px;\n            min-width: 20px;\n        }\n    }\n}\n::v-deep .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n}\n</style>"]}]}
{"remainingRequest":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weiweiwei/code/projects/init-admin/src/views/role/index.vue?vue&type=style&index=0&id=244c7f13&scoped=true&lang=css&","dependencies":[{"path":"/Users/weiweiwei/code/projects/init-admin/src/views/role/index.vue","mtime":1691142905988},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi52ay1kcmF3ZXJfX2NvbnRlbnR7CiAgICBwYWRkaW5nOiAwIDIwcHggMjBweCAhaW1wb3J0YW50OwogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICBoZWlnaHQ6IDEwMCU7Cn0KLnZrLWRyYXdlcl9fY29udGVudCBmb3JtewogICAgZmxleDogMTsKfQoudmstZHJhd2VyX19mb290ZXJ7CiAgICBkaXNwbGF5OiBmbGV4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/role","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-card class=\"show\">\n            <el-form inline :model=\"query\" ref=\"queryForm\" class=\"vk-form-inline\" v-if=\"showSearch\">\n                <el-form-item label=\"账号\">\n                    <el-input v-model=\"query.account\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"状态\">\n                    <el-select v-model=\"query.status\" clearable>\n                        <el-option value=\"1\" label=\"启用\"></el-option>\n                        <el-option value=\"2\" label=\"禁用\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item>\n                    <el-button icon=\"el-icon-search\" @click='search()'>搜索</el-button>\n                    <el-button @click='rest()'>重置</el-button>\n                </el-form-item>\n            </el-form>\n\n            <el-row :gutter=\"10\" class=\"mb8\">\n                <el-col :span=\"1.5\">\n                    <el-button type=\"primary\" plain icon=\"el-icon-plus\" size=\"mini\" @click=\"add\"\n                        v-auth=\"['user:add']\">新增</el-button>\n                </el-col>\n                <el-col :span=\"1.5\">\n                    <el-button type=\"danger\" plain icon=\"el-icon-delete\" size=\"mini\" @click=\"delAll\"\n                        v-auth=\"['user:del']\">删除</el-button>\n                </el-col>\n                <el-col :span=\"1.5\">\n                    <el-button type=\"warning\" plain icon=\"el-icon-download\" size=\"mini\" @click=\"handleExport\"\n                        v-auth=\"['user:export']\">导出</el-button>\n                </el-col>\n                <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n            </el-row>\n\n            <el-table :data=\"list\" row-key=\"id\" ref=\"dragTable\">\n                <!-- 多选 -->\n                <el-table-column type=\"selection\"></el-table-column>\n                <el-table-column label=\"角色\" prop=\"name\">\n                </el-table-column>\n                <el-table-column prop=\"status\" label=\"状态\">\n                    <template slot-scope=\"scope\">\n                        <el-switch :active-value=\"1\" :inactive-value=\"2\" v-model=\"scope.row.status\" v-auth=\"'user:status'\"\n                            v-if=\"scope.row.id !== 1\" @change=\"(e) => status(e, scope.row.id, scope.$index)\">\n                        </el-switch>\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"created_at\" label=\"创建时间\">\n                </el-table-column>\n                <el-table-column prop=\"status\" label=\"操作\" fixed=\"right\">\n                    <template slot-scope=\"scope\" v-if=\"scope.row.id !== 1\">\n                        <el-link type=\"primary\" icon=\"el-icon-edit\" :underline=\"false\" v-auth=\"'user:add'\"\n                            @click=\"edit(scope.$index, scope.row)\">编辑</el-link>\n                        <el-link type=\"primary\" icon=\"el-icon-delete\" :underline=\"false\" v-auth=\"'user:del'\"\n                            @click=\"del(scope.$index, scope.row)\">删除</el-link>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </el-card>\n\n        <el-drawer\n            :title=\"title\" \n            :visible.sync=\"drawerFormVisible\"\n            :direction=\"'rtl'\"\n            size=\"40%\" \n            :append-to-body=\"true\"\n            custom-class=\"drawer\"\n            ref=\"drawer\"\n        >\n            <div class=\"vk-drawer__content\">\n                <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"50px\">\n                    <el-form-item label=\"账号\" prop=\"account\">\n                        <el-input v-model=\"form.account\" autocomplete=\"off\"></el-input>\n                    </el-form-item>\n                </el-form>\n                <div slot=\"footer\" class=\"vk-drawer__footer\">\n                    <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\n                </div>\n            </div>\n        </el-drawer>\n    </div>\n</template>\n  \n<script>\nimport { lists, edit, update, changeStatus, create, del } from \"@/api/role\";\nimport { confirm } from \"@/utils/message-box.js\";\nimport { getTableIds } from \"@/utils/index.js\";\nexport default {\n    name: \"index\",\n    data() {\n        return {\n            query: {},\n            list: [],\n            total: 0,\n            title: \"\",\n            form: {},\n            drawerFormVisible: false,\n            showSearch: true,\n            rules: {\n                account: [\n                    { required: true, message: '请输入账号', trigger: 'blur' },\n                ],\n                role: [\n                    { required: true, message: '请选择角色', trigger: 'change' }\n                ],\n                status: [\n                    { required: true, message: '请选择状态', trigger: 'change' }\n                ],\n            }\n        }\n    },\n    created() {\n        this.rest()\n    },\n    methods: {\n        queryData() {\n            this.query = {\n                account: \"\",\n                status: \"\",\n            }\n        },\n        getList() {\n            let that = this\n            lists(that.query).then(res => {\n                if (res.code === 200) {\n                    const { list, total } = res.data;\n                    that.list = list\n                    that.total = total\n                }\n            }).catch(error => {\n                console.log(error)\n            })\n        },\n        search() {\n            this.getList();\n        },\n        status(e, id, index) {\n            changeStatus(id, e).then(res => {\n                console.log(res)\n            }).catch(error => {\n                console.log(error)\n            })\n        },\n        add: function () {\n            this.form = {}\n            this.drawerFormVisible = true\n            this.title = \"新增角色\";\n            this.rules.password = [\n                { required: true, message: '请输入密码', trigger: 'blur' },\n            ]\n            edit().then(res => {\n                this.form = res.data\n            })\n        },\n        delAll: function () {\n            let ids = getTableIds(this.$refs.dragTable)\n            let fn = () => {\n                del(ids).then((response) => {\n                    this.$message({\n                        type: 'success',\n                        message: response.msg,\n                    });\n                    this.getList();\n                }).catch((error) => {\n                    console.log(error);\n                })\n            }\n            confirm(\"是否永久删除该数据？\", fn);\n        },\n        del: function (index, e) {\n            let fn = () => {\n                del(e.id).then((response) => {\n                    this.$message({\n                        type: 'success',\n                        message: response.msg,\n                    });\n                    this.list.splice(index, 1)\n                    this.total = that.total - 1\n                }).catch((error) => {\n                    console.log(error);\n                })\n            }\n            confirm(\"是否永久删除该数据？\", fn);\n        },\n        handleExport: function () {\n\n        },\n        edit: function (index, e) {\n            this.title = \"编辑角色\";\n            this.rules.password = [{}]\n            edit(e.id).then(res => {\n                this.form = res.data\n            })\n            this.drawerFormVisible = true\n        },\n        rest: function () {\n            this.queryData()\n            this.getList();\n        },\n        submit() {\n            this.$refs.ruleForm.validate((valid) => {\n                if (valid) {\n                    let api = this.form.id ? update(this.form) : create(this.form)\n\n                    api.then(res => {\n                        this.$message({\n                            message: \"操作成功\",\n                            type: \"success\"\n                        })\n                        this.drawerFormVisible = false\n                        this.getList();\n                    })\n                } else {\n                    return false;\n                }\n            });\n        }\n    }\n}\n</script>\n  \n<style scoped>\n    .vk-drawer__content{\n        padding: 0 20px 20px !important;\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n    }\n    .vk-drawer__content form{\n        flex: 1;\n    }\n    .vk-drawer__footer{\n        display: flex;\n    }\n</style>\n  "]}]}
{"remainingRequest":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weiweiwei/code/projects/init-admin/src/views/menu/index.vue?vue&type=template&id=70f07688&scoped=true&","dependencies":[{"path":"/Users/weiweiwei/code/projects/init-admin/src/views/menu/index.vue","mtime":1691389206023},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiweiwei/code/projects/init-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}